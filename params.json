{"name":"Node-webduino","tagline":"A web FrontEnd for Arduino","body":"# node-webduino\r\n\r\nA web FrontEnd for Arduino. Real-time I/O monitoring and controlling in your browser.\r\n\r\n![arduino](http://arduino.cc/en/uploads/Main/ArduinoUno_R3_Front_450px.jpg)\r\n\r\n## Installation\r\n\r\nSee <http://nodejs.org> on how to setup Node, NPM and CoffeeScript, then clone \r\nthis repository and prepare it for use with:\r\n\r\n    $ git clone https://github.com/coopermaa/node-webduino\r\n    $ cd node-webduino\r\n    $ npm install\r\n\r\n## Usage\r\n\r\nUpload Standard Firmata to your Arduino. Better to change samplingInterval from \r\n19ms to larger, for example 50ms. For Arduino Mega, 100ms is sugggested.\r\n\r\n    int samplingInterval = 50;\r\n\r\nYou'll need to adjust the name of the serial port to match your setup in the\r\nfile `app.coffee`, then start the server using either of these:\r\n\r\n    $ coffee app.coffee\r\n    $ nodemon app.coffee\r\n\r\nThen point your browser at <http://localhost:3000/>.    \r\n\r\nHere is a screencut of node-webduino for Arduino UNO:\r\n\r\n![screencut](http://bit.ly/XHta3m)\r\n    \r\n## Dockerized node-webduino\r\n\r\nSuppose your Arduino is on /dev/ttyS1, then save the alias setting below to ~/.profile \r\nor ~/.bashrc:\r\n\r\n    $ alias node-webduino=\"sudo docker run -d --privileged \\\r\n       -v /dev/ttyS1:/dev/ttyACM0 \\\r\n       -p 3000:3000 coopermaa/node-webduino\"\r\n\r\nThen run following to start node-webduino:\r\n\r\n    $ node-webdunio\r\n\r\n## License\r\n\r\n[The MIT License](http://opensource.org/licenses/MIT)\r\n\r\nCredits: Developers of node.js, Arduino, SocketStream, AngularJS, firmata and \r\npeople who involved in improving Web technologies.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}